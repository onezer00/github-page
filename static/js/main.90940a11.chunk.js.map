{"version":3,"sources":["container/home/oner.png","Services/history.js","container/home/Home.js","container/skills/Skills.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","history","createBrowserHistory","Home","react_default","a","createElement","className","src","logo","id","alt","onMouseOver","document","getElementById","classList","add","onMouseOut","remove","react_router_dom","to","Component","Skills","SwitchRoutes","location","useLocation","TransitionGroup","CSSTransition","key","classNames","timeout","react_router","path","exact","element","Home_Home","Skills_Skills","App","Boolean","window","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90940a11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oner.88ca98e6.png\";","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport logo from './oner.png';\nimport './Home.scss';\n\nexport default class Home extends Component {\n  render() {\n    const btn = () => {\n      const logo = document.getElementById(\"logo\");\n      logo.classList.add(\"hover\");\n    }\n  \n    const btn_out = () => {\n      const logo = document.getElementById(\"logo\");\n      logo.classList.remove(\"hover\");\n    }\n\n    return (\n      <div className=\"App\">\n      <div className=\"night\">\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        <div className=\"shooting_star\"></div>\n        \n      </div>\n      <header className=\"App-header\">\n        <div>\n          <div className='avatar avatar-x-large'>\n            <img src={logo} className=\"logo\" id=\"logo\" alt=\"oner\" >\n            </img>\n            <img src=\"https://i.imgur.com/0aDdQyR.png\" alt=\"Moldura\" className=\"avatar-frame anim-spin\"></img>\n          </div>\n          <div className=\"all\" onMouseOver={btn} onMouseOut={btn_out}>\n            <div className=\"lefter\">\n              <div className=\"text\">Frontend Development</div>\n            </div>\n            <div className=\"left\">\n              <div className=\"text\">Backend Development</div>\n            </div>\n            <Link to='skills' className=\"center\">\n                <div className=\"explainer\"><span>About Me</span></div>\n                  <div className=\"text\">Skills</div>\n            </Link>\n            <div className=\"right\">\n              <div className=\"text\">Contacts</div>\n            </div>\n            <div className=\"righter\">\n              <div className=\"text\">About Me</div>\n            </div>\n          </div>\n        </div>\n      </header>\n    </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default class Skills extends Component {\n    render () {\n        return (\n            <div className=\"App\">\n                <header className=''>\n                    <div>\n                        <div className=''>\n                            <Link to='/' className=\"center\">\n                                <button className=\"btn btn-primary\">Home</button>\n                            </Link>\n                        </div>\n                    </div>\n                </header>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Routes, useLocation, Route } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport history from './Services/history';\nimport './Styles/animations.css';\n\nimport Home from './container/home/Home';\nimport Skills from './container/skills/Skills';\n\nexport default function SwitchRoutes() {\n\n  const location = useLocation();\n\n  return <TransitionGroup>\n    <CSSTransition key={location.key} classNames=\"fade\" timeout={500}>\n      <Routes location={location} history={history}>\n        <Route path=\"/\" exact element={<Home/>} />\n        <Route path=\"/skills\" exact element={<Skills/>} />\n      </Routes>\n    </CSSTransition>\n  </TransitionGroup>\n}\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport SwitchRoutes from './routes';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <SwitchRoutes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}